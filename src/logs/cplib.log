info: cplib: May-01-2022 22:07:23: Regular PDF Location /home/ana/Documents/home/ana/GitHub/cplib/src/resources/tmp/RegularRates_2022.pdf
info: cplib: May-01-2022 22:07:28: Updating the fuel surcharge on the source db
info: cplib: May-01-2022 22:07:29: Copied the current db file to use for updating (interim)
info: cplib: May-01-2022 22:07:29: Make all writes go to the new temporary db
info: cplib: May-01-2022 22:07:29: Set write db promise
info: cplib: May-01-2022 22:07:29: Closed previous write db
info: cplib: May-01-2022 22:07:29: Db To Open /home/ana/Documents/home/ana/GitHub/cplib/src/cplib_interim.db
debug: cplib: May-01-2022 22:07:29: Data check regular update
debug: cplib: May-01-2022 22:07:29: Number of rows deleted for year 2022 type regular: 0
debug: cplib: May-01-2022 22:07:29: Start loading pdf 
debug: cplib: May-01-2022 22:07:31: Done loading pdf data
debug: cplib: May-01-2022 22:07:31: Starting extracting express canada
debug: cplib: May-01-2022 22:07:31: Successfully express 
debug: cplib: May-01-2022 22:07:31: Successfully regular canada 
debug: cplib: May-01-2022 22:07:31: Successfully priority worldwide 
debug: cplib: May-01-2022 22:07:31: Successfully express usa 
debug: cplib: May-01-2022 22:07:31: Successfully cleaned extra lines from expedited usa
debug: cplib: May-01-2022 22:07:31: Rate Tables tracked packet usa 
debug: cplib: May-01-2022 22:07:31: Page Array Raw ["Tracked Packet USAprices","(UPTOANDINCLUDING) WEIGHT","INKG INLB","0.1 0.2","0.5 0.25 $17.18","1.1 0.5 $18.97","2.2 1.0 $21.91","3.3 1.5 $24.79","4.4 2.0 $27.64","DK19700 Consumer_PriCes PAGe23 EffectiveSeptember132021","*F or more in f orm at ion re f er t o y our ParcelServicesCustomerGuide or th e CanadaPostalGuide at canadapost.ca%2Fpostalservices ."]
debug: cplib: May-01-2022 22:07:31: RCS! 1,2,3,4,5,6,7
debug: cplib: May-01-2022 22:07:31: Page Array After Slicing[null,"0.1 0.2","0.5 0.25 $17.18","1.1 0.5 $18.97","2.2 1.0 $21.91","3.3 1.5 $24.79","4.4 2.0 $27.64","dk19700 consumer_prices page23 effectiveseptember132021","*f or more in f orm at ion re f er t o y our parcelservicescustomerguide or th e canadapostalguide at canadapost.ca%2fpostalservices ."]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: 0.2 in row 0.1 0.2
debug: cplib: May-01-2022 22:07:31: Converting KG to LB 0.1
debug: cplib: May-01-2022 22:07:31: After all the shift ["0.1",0.22]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: 0.25 in row 0.5 0.25 17.18
debug: cplib: May-01-2022 22:07:31: Converting KG to LB 0.5
debug: cplib: May-01-2022 22:07:31: After all the shift ["0.5",1.1,"17.18"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: 0.5 in row 1.1 0.5 18.97
debug: cplib: May-01-2022 22:07:31: Converting KG to LB 1.1
debug: cplib: May-01-2022 22:07:31: After all the shift ["1.1",2.42,"18.97"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: 1.0 in row 2.2 1.0 21.91
debug: cplib: May-01-2022 22:07:31: Converting KG to LB 2.2
debug: cplib: May-01-2022 22:07:31: After all the shift ["2.2",4.84,"21.91"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: 1.5 in row 3.3 1.5 24.79
debug: cplib: May-01-2022 22:07:31: Converting KG to LB 3.3
debug: cplib: May-01-2022 22:07:31: After all the shift ["3.3",7.26,"24.79"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: 2.0 in row 4.4 2.0 27.64
debug: cplib: May-01-2022 22:07:31: Converting KG to LB 4.4
debug: cplib: May-01-2022 22:07:31: After all the shift ["4.4",9.68,"27.64"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: consumer_prices in row dk19700 consumer_prices page23 effectiveseptember132021
debug: cplib: May-01-2022 22:07:31: Converting KG to LB dk19700
debug: cplib: May-01-2022 22:07:31: After all the shift ["dk19700",null,"page23","effectiveseptember132021"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: or in row *f or more in f orm at ion re f er t o y our parcelservicescustomerguide or th e canadapostalguide at canadapost.ca%2fpostalservices .
debug: cplib: May-01-2022 22:07:31: Converting KG to LB *f
debug: cplib: May-01-2022 22:07:31: After all the shift ["*f",null,"more","in","f","orm","at","ion","re","f","er","t","o","y","our","parcelservicescustomerguide","or","th","e","canadapostalguide","at","canadapost.ca%2fpostalservices","."]
debug: cplib: May-01-2022 22:07:31: Final Table Row returning ["0.1 0.22 0.22 0.22 0.22 0.22 0.22 0.22","1 2 3 4 5 6 7","0.5 1.1 17.18 17.18 17.18 17.18 17.18 17.18 17.18","1.1 2.42 18.97 18.97 18.97 18.97 18.97 18.97 18.97","2.2 4.84 21.91 21.91 21.91 21.91 21.91 21.91 21.91","3.3 7.26 24.79 24.79 24.79 24.79 24.79 24.79 24.79","4.4 9.68 27.64 27.64 27.64 27.64 27.64 27.64 27.64","dk19700 NaN page23 effectiveseptember132021","*f NaN more in f orm at ion re f er t o y our parcelservicescustomerguide or th e canadapostalguide at canadapost.ca%2fpostalservices ."]
debug: cplib: May-01-2022 22:07:31: Rate Tables tracked packet usa - converted to table
warn: cplib: May-01-2022 22:07:31: regular - 2022: Failed to populate Small Packet USA tables
debug: cplib: May-01-2022 22:07:31: Starting extracting express international
debug: cplib: May-01-2022 22:07:31: Starting extracting air international
debug: cplib: May-01-2022 22:07:31: Starting extracting surface international
debug: cplib: May-01-2022 22:07:31: Starting extracting tracked packet international
debug: cplib: May-01-2022 22:07:31: Page Array Raw ["INKG INLB 1 2 3 4 5 6 7 8 9 10","0.1 0.2 28.59 31.87 40.37 34.13 34.87 40.15 38.77 42.96 37.76 43.45","0.25 0.5 36.45 40.62 51.48 43.51 44.45 51.18 49.44 54.77 48.17 55.40","0.5 1.1 47.96 52.86 66.80 56.75 58.03 66.32 64.19 70.86 62.74 71.62","1.0 2.2 57.25 65.65 79.88 70.13 71.28 80.66 78.01 84.14 76.80 84.06","1.5 3.3 60.65 72.83 89.24 77.78 79.98 91.59 88.58 96.28 85.03 95.54","2.0 4.4 66.12 80.86 99.82 86.36 88.23 101.31 99.98 109.68 94.33 108.30","DK19700 C onsu mer _ P ri C e s P A G e 37 EffectiveSeptember132021","*F or more in f orm at ion re f er t o y our ParcelServicesCustomerGuide or th e CanadaPostalGuide at canadapost.ca%2Fpostalservices ."]
debug: cplib: May-01-2022 22:07:31: RCS! INKG,INLB,1,2,3,4,5,6,7,8,9,10
debug: cplib: May-01-2022 22:07:31: Page Array After Slicing["1 2 3 4 5 6 7 8 9 10","0.1 0.2 28.59 31.87 40.37 34.13 34.87 40.15 38.77 42.96 37.76 43.45","0.25 0.5 36.45 40.62 51.48 43.51 44.45 51.18 49.44 54.77 48.17 55.40","0.5 1.1 47.96 52.86 66.80 56.75 58.03 66.32 64.19 70.86 62.74 71.62","1.0 2.2 57.25 65.65 79.88 70.13 71.28 80.66 78.01 84.14 76.80 84.06","1.5 3.3 60.65 72.83 89.24 77.78 79.98 91.59 88.58 96.28 85.03 95.54","2.0 4.4 66.12 80.86 99.82 86.36 88.23 101.31 99.98 109.68 94.33 108.30","dk19700 c onsu mer _ p ri c e s p a g e 37 effectiveseptember132021","*f or more in f orm at ion re f er t o y our parcelservicescustomerguide or th e canadapostalguide at canadapost.ca%2fpostalservices ."]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: 2 in row 1 2 3 4 5 6 7 8 9 10
debug: cplib: May-01-2022 22:07:31: Converting KG to LB 1
debug: cplib: May-01-2022 22:07:31: After all the shift ["1",2.2,"3","4","5","6","7","8","9","10"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: 0.2 in row 0.1 0.2 28.59 31.87 40.37 34.13 34.87 40.15 38.77 42.96 37.76 43.45
debug: cplib: May-01-2022 22:07:31: Converting KG to LB 0.1
debug: cplib: May-01-2022 22:07:31: After all the shift ["0.1",0.22,"28.59","31.87","40.37","34.13","34.87","40.15","38.77","42.96","37.76","43.45"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: 0.5 in row 0.25 0.5 36.45 40.62 51.48 43.51 44.45 51.18 49.44 54.77 48.17 55.40
debug: cplib: May-01-2022 22:07:31: Converting KG to LB 0.25
debug: cplib: May-01-2022 22:07:31: After all the shift ["0.25",0.55,"36.45","40.62","51.48","43.51","44.45","51.18","49.44","54.77","48.17","55.40"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: 1.1 in row 0.5 1.1 47.96 52.86 66.80 56.75 58.03 66.32 64.19 70.86 62.74 71.62
debug: cplib: May-01-2022 22:07:31: Converting KG to LB 0.5
debug: cplib: May-01-2022 22:07:31: After all the shift ["0.5",1.1,"47.96","52.86","66.80","56.75","58.03","66.32","64.19","70.86","62.74","71.62"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: 2.2 in row 1.0 2.2 57.25 65.65 79.88 70.13 71.28 80.66 78.01 84.14 76.80 84.06
debug: cplib: May-01-2022 22:07:31: Converting KG to LB 1.0
debug: cplib: May-01-2022 22:07:31: After all the shift ["1.0",2.2,"57.25","65.65","79.88","70.13","71.28","80.66","78.01","84.14","76.80","84.06"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: 3.3 in row 1.5 3.3 60.65 72.83 89.24 77.78 79.98 91.59 88.58 96.28 85.03 95.54
debug: cplib: May-01-2022 22:07:31: Converting KG to LB 1.5
debug: cplib: May-01-2022 22:07:31: After all the shift ["1.5",3.3,"60.65","72.83","89.24","77.78","79.98","91.59","88.58","96.28","85.03","95.54"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: 4.4 in row 2.0 4.4 66.12 80.86 99.82 86.36 88.23 101.31 99.98 109.68 94.33 108.30
debug: cplib: May-01-2022 22:07:31: Converting KG to LB 2.0
debug: cplib: May-01-2022 22:07:31: After all the shift ["2.0",4.4,"66.12","80.86","99.82","86.36","88.23","101.31","99.98","109.68","94.33","108.30"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: c in row dk19700 c onsu mer _ p ri c e s p a g e 37 effectiveseptember132021
debug: cplib: May-01-2022 22:07:31: Converting KG to LB dk19700
debug: cplib: May-01-2022 22:07:31: After all the shift ["dk19700",null,"onsu","mer","_","p","ri","c","e","s","p","a","g","e","37","effectiveseptember132021"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: or in row *f or more in f orm at ion re f er t o y our parcelservicescustomerguide or th e canadapostalguide at canadapost.ca%2fpostalservices .
debug: cplib: May-01-2022 22:07:31: Converting KG to LB *f
debug: cplib: May-01-2022 22:07:31: After all the shift ["*f",null,"more","in","f","orm","at","ion","re","f","er","t","o","y","our","parcelservicescustomerguide","or","th","e","canadapostalguide","at","canadapost.ca%2fpostalservices","."]
debug: cplib: May-01-2022 22:07:31: Final Table Row returning ["1 2 3 4 5 6 7 8 9 10","1 2.2 3 4 5 6 7 8 9 10","0.1 0.22 28.59 31.87 40.37 34.13 34.87 40.15 38.77 42.96 37.76 43.45","0.25 0.55 36.45 40.62 51.48 43.51 44.45 51.18 49.44 54.77 48.17 55.40","0.5 1.1 47.96 52.86 66.80 56.75 58.03 66.32 64.19 70.86 62.74 71.62","1.0 2.2 57.25 65.65 79.88 70.13 71.28 80.66 78.01 84.14 76.80 84.06","1.5 3.3 60.65 72.83 89.24 77.78 79.98 91.59 88.58 96.28 85.03 95.54","2.0 4.4 66.12 80.86 99.82 86.36 88.23 101.31 99.98 109.68 94.33 108.30","dk19700 NaN onsu mer _ p ri c e s p a g e 37 effectiveseptember132021","*f NaN more in f orm at ion re f er t o y our parcelservicescustomerguide or th e canadapostalguide at canadapost.ca%2fpostalservices ."]
debug: cplib: May-01-2022 22:07:31: Starting extracting small packet international
debug: cplib: May-01-2022 22:07:31: WorldwideSmallPacket ["INKG INLB 1 2 3 4 5 6 7 8 9 10","0.1 0.2 11.11 10.62 12.94 11.53 11.92 12.07 12.07 12.56 12.52 13.26","0.25 0.5 12.17 11.61 14.16 12.63 13.05 13.22 13.22 13.76 13.69 14.51","0.5 1.1 22.70 21.70 26.46 23.93 24.76 24.73 24.71 25.74 25.59 26.40","1.0 2.2 43.23 41.91 49.63 44.26 45.55 47.24 47.62 48.33 47.45 50.96","1.5 3.3 49.31 52.46 62.37 55.51 59.44 65.19 61.07 61.93 59.49 65.33","2.0 4.4 55.39 63.00 75.11 66.71 69.15 75.93 74.51 75.53 71.49 79.65","INKG INLB 1 2 3 4 5 6 7 8 9 10","0.25 0.5 9.41 9.49 10.02 9.75 9.87 9.88 9.93 10.05 9.99 10.24","0.5 1.1 13.18 12.99 15.14 13.70 14.06 14.06 14.41 14.69 14.49 14.77","1.0 2.2 21.81 21.82 24.63 22.86 23.26 23.35 24.13 24.56 23.91 25.10","1.5 3.3 26.92 26.22 30.48 28.24 28.66 28.87 30.13 30.59 29.51 32.19","2.0 4.4 32.02 30.60 36.29 33.61 34.09 34.39 36.12 36.65 35.07 39.28","DK19700 C onsu mer _ P ri C e s P A G e 39 EffectiveSeptember132021","*F or more in f orm at ion re f er t o y our ParcelServicesCustomerGuide or th e CanadaPostalGuide at canadapost.ca%2Fpostalservices ."]
debug: cplib: May-01-2022 22:07:31: Split Multi Page Table [["INKG INLB 1 2 3 4 5 6 7 8 9 10","0.1 0.2 11.11 10.62 12.94 11.53 11.92 12.07 12.07 12.56 12.52 13.26","0.25 0.5 12.17 11.61 14.16 12.63 13.05 13.22 13.22 13.76 13.69 14.51","0.5 1.1 22.70 21.70 26.46 23.93 24.76 24.73 24.71 25.74 25.59 26.40","1.0 2.2 43.23 41.91 49.63 44.26 45.55 47.24 47.62 48.33 47.45 50.96","1.5 3.3 49.31 52.46 62.37 55.51 59.44 65.19 61.07 61.93 59.49 65.33","2.0 4.4 55.39 63.00 75.11 66.71 69.15 75.93 74.51 75.53 71.49 79.65"],["INKG INLB 1 2 3 4 5 6 7 8 9 10","0.25 0.5 9.41 9.49 10.02 9.75 9.87 9.88 9.93 10.05 9.99 10.24","0.5 1.1 13.18 12.99 15.14 13.70 14.06 14.06 14.41 14.69 14.49 14.77","1.0 2.2 21.81 21.82 24.63 22.86 23.26 23.35 24.13 24.56 23.91 25.10","1.5 3.3 26.92 26.22 30.48 28.24 28.66 28.87 30.13 30.59 29.51 32.19","2.0 4.4 32.02 30.60 36.29 33.61 34.09 34.39 36.12 36.65 35.07 39.28","DK19700 C onsu mer _ P ri C e s P A G e 39 EffectiveSeptember132021"],["*F or more in f orm at ion re f er t o y our ParcelServicesCustomerGuide or th e CanadaPostalGuide at canadapost.ca%2Fpostalservices ."]]
debug: cplib: May-01-2022 22:07:31: Page Array Raw ["INKG INLB 1 2 3 4 5 6 7 8 9 10","0.1 0.2 11.11 10.62 12.94 11.53 11.92 12.07 12.07 12.56 12.52 13.26","0.25 0.5 12.17 11.61 14.16 12.63 13.05 13.22 13.22 13.76 13.69 14.51","0.5 1.1 22.70 21.70 26.46 23.93 24.76 24.73 24.71 25.74 25.59 26.40","1.0 2.2 43.23 41.91 49.63 44.26 45.55 47.24 47.62 48.33 47.45 50.96","1.5 3.3 49.31 52.46 62.37 55.51 59.44 65.19 61.07 61.93 59.49 65.33","2.0 4.4 55.39 63.00 75.11 66.71 69.15 75.93 74.51 75.53 71.49 79.65"]
debug: cplib: May-01-2022 22:07:31: RCS! 1,2,3,4,5,6,7,8,9,10
debug: cplib: May-01-2022 22:07:31: Page Array After Slicing["0.1 0.2 11.11 10.62 12.94 11.53 11.92 12.07 12.07 12.56 12.52 13.26","0.25 0.5 12.17 11.61 14.16 12.63 13.05 13.22 13.22 13.76 13.69 14.51","0.5 1.1 22.70 21.70 26.46 23.93 24.76 24.73 24.71 25.74 25.59 26.40","1.0 2.2 43.23 41.91 49.63 44.26 45.55 47.24 47.62 48.33 47.45 50.96","1.5 3.3 49.31 52.46 62.37 55.51 59.44 65.19 61.07 61.93 59.49 65.33","2.0 4.4 55.39 63.00 75.11 66.71 69.15 75.93 74.51 75.53 71.49 79.65"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: 0.2 in row 0.1 0.2 11.11 10.62 12.94 11.53 11.92 12.07 12.07 12.56 12.52 13.26
debug: cplib: May-01-2022 22:07:31: Converting KG to LB 0.1
debug: cplib: May-01-2022 22:07:31: After all the shift ["0.1",0.22,"11.11","10.62","12.94","11.53","11.92","12.07","12.07","12.56","12.52","13.26"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: 0.5 in row 0.25 0.5 12.17 11.61 14.16 12.63 13.05 13.22 13.22 13.76 13.69 14.51
debug: cplib: May-01-2022 22:07:31: Converting KG to LB 0.25
debug: cplib: May-01-2022 22:07:31: After all the shift ["0.25",0.55,"12.17","11.61","14.16","12.63","13.05","13.22","13.22","13.76","13.69","14.51"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: 1.1 in row 0.5 1.1 22.70 21.70 26.46 23.93 24.76 24.73 24.71 25.74 25.59 26.40
debug: cplib: May-01-2022 22:07:31: Converting KG to LB 0.5
debug: cplib: May-01-2022 22:07:31: After all the shift ["0.5",1.1,"22.70","21.70","26.46","23.93","24.76","24.73","24.71","25.74","25.59","26.40"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: 2.2 in row 1.0 2.2 43.23 41.91 49.63 44.26 45.55 47.24 47.62 48.33 47.45 50.96
debug: cplib: May-01-2022 22:07:31: Converting KG to LB 1.0
debug: cplib: May-01-2022 22:07:31: After all the shift ["1.0",2.2,"43.23","41.91","49.63","44.26","45.55","47.24","47.62","48.33","47.45","50.96"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: 3.3 in row 1.5 3.3 49.31 52.46 62.37 55.51 59.44 65.19 61.07 61.93 59.49 65.33
debug: cplib: May-01-2022 22:07:31: Converting KG to LB 1.5
debug: cplib: May-01-2022 22:07:31: After all the shift ["1.5",3.3,"49.31","52.46","62.37","55.51","59.44","65.19","61.07","61.93","59.49","65.33"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: 4.4 in row 2.0 4.4 55.39 63.00 75.11 66.71 69.15 75.93 74.51 75.53 71.49 79.65
debug: cplib: May-01-2022 22:07:31: Converting KG to LB 2.0
debug: cplib: May-01-2022 22:07:31: After all the shift ["2.0",4.4,"55.39","63.00","75.11","66.71","69.15","75.93","74.51","75.53","71.49","79.65"]
debug: cplib: May-01-2022 22:07:31: Final Table Row returning ["1 2 3 4 5 6 7 8 9 10","0.1 0.22 11.11 10.62 12.94 11.53 11.92 12.07 12.07 12.56 12.52 13.26","0.25 0.55 12.17 11.61 14.16 12.63 13.05 13.22 13.22 13.76 13.69 14.51","0.5 1.1 22.70 21.70 26.46 23.93 24.76 24.73 24.71 25.74 25.59 26.40","1.0 2.2 43.23 41.91 49.63 44.26 45.55 47.24 47.62 48.33 47.45 50.96","1.5 3.3 49.31 52.46 62.37 55.51 59.44 65.19 61.07 61.93 59.49 65.33","2.0 4.4 55.39 63.00 75.11 66.71 69.15 75.93 74.51 75.53 71.49 79.65"]
debug: cplib: May-01-2022 22:07:31: First page after split ["1 2 3 4 5 6 7 8 9 10","0.1 0.22 11.11 10.62 12.94 11.53 11.92 12.07 12.07 12.56 12.52 13.26","0.25 0.55 12.17 11.61 14.16 12.63 13.05 13.22 13.22 13.76 13.69 14.51","0.5 1.1 22.70 21.70 26.46 23.93 24.76 24.73 24.71 25.74 25.59 26.40","1.0 2.2 43.23 41.91 49.63 44.26 45.55 47.24 47.62 48.33 47.45 50.96","1.5 3.3 49.31 52.46 62.37 55.51 59.44 65.19 61.07 61.93 59.49 65.33","2.0 4.4 55.39 63.00 75.11 66.71 69.15 75.93 74.51 75.53 71.49 79.65"]
debug: cplib: May-01-2022 22:07:31: Second page after split ["INKG INLB 1 2 3 4 5 6 7 8 9 10","0.25 0.5 9.41 9.49 10.02 9.75 9.87 9.88 9.93 10.05 9.99 10.24","0.5 1.1 13.18 12.99 15.14 13.70 14.06 14.06 14.41 14.69 14.49 14.77","1.0 2.2 21.81 21.82 24.63 22.86 23.26 23.35 24.13 24.56 23.91 25.10","1.5 3.3 26.92 26.22 30.48 28.24 28.66 28.87 30.13 30.59 29.51 32.19","2.0 4.4 32.02 30.60 36.29 33.61 34.09 34.39 36.12 36.65 35.07 39.28","DK19700 C onsu mer _ P ri C e s P A G e 39 EffectiveSeptember132021"]
debug: cplib: May-01-2022 22:07:31: Page Array Raw ["INKG INLB 1 2 3 4 5 6 7 8 9 10","0.25 0.5 9.41 9.49 10.02 9.75 9.87 9.88 9.93 10.05 9.99 10.24","0.5 1.1 13.18 12.99 15.14 13.70 14.06 14.06 14.41 14.69 14.49 14.77","1.0 2.2 21.81 21.82 24.63 22.86 23.26 23.35 24.13 24.56 23.91 25.10","1.5 3.3 26.92 26.22 30.48 28.24 28.66 28.87 30.13 30.59 29.51 32.19","2.0 4.4 32.02 30.60 36.29 33.61 34.09 34.39 36.12 36.65 35.07 39.28","DK19700 C onsu mer _ P ri C e s P A G e 39 EffectiveSeptember132021"]
debug: cplib: May-01-2022 22:07:31: RCS! 1,2,3,4,5,6,7,8,9,10
debug: cplib: May-01-2022 22:07:31: Page Array After Slicing["0.25 0.5 9.41 9.49 10.02 9.75 9.87 9.88 9.93 10.05 9.99 10.24","0.5 1.1 13.18 12.99 15.14 13.70 14.06 14.06 14.41 14.69 14.49 14.77","1.0 2.2 21.81 21.82 24.63 22.86 23.26 23.35 24.13 24.56 23.91 25.10","1.5 3.3 26.92 26.22 30.48 28.24 28.66 28.87 30.13 30.59 29.51 32.19","2.0 4.4 32.02 30.60 36.29 33.61 34.09 34.39 36.12 36.65 35.07 39.28","dk19700 c onsu mer _ p ri c e s p a g e 39 effectiveseptember132021"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: 0.5 in row 0.25 0.5 9.41 9.49 10.02 9.75 9.87 9.88 9.93 10.05 9.99 10.24
debug: cplib: May-01-2022 22:07:31: Converting KG to LB 0.25
debug: cplib: May-01-2022 22:07:31: After all the shift ["0.25",0.55,"9.41","9.49","10.02","9.75","9.87","9.88","9.93","10.05","9.99","10.24"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: 1.1 in row 0.5 1.1 13.18 12.99 15.14 13.70 14.06 14.06 14.41 14.69 14.49 14.77
debug: cplib: May-01-2022 22:07:31: Converting KG to LB 0.5
debug: cplib: May-01-2022 22:07:31: After all the shift ["0.5",1.1,"13.18","12.99","15.14","13.70","14.06","14.06","14.41","14.69","14.49","14.77"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: 2.2 in row 1.0 2.2 21.81 21.82 24.63 22.86 23.26 23.35 24.13 24.56 23.91 25.10
debug: cplib: May-01-2022 22:07:31: Converting KG to LB 1.0
debug: cplib: May-01-2022 22:07:31: After all the shift ["1.0",2.2,"21.81","21.82","24.63","22.86","23.26","23.35","24.13","24.56","23.91","25.10"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: 3.3 in row 1.5 3.3 26.92 26.22 30.48 28.24 28.66 28.87 30.13 30.59 29.51 32.19
debug: cplib: May-01-2022 22:07:31: Converting KG to LB 1.5
debug: cplib: May-01-2022 22:07:31: After all the shift ["1.5",3.3,"26.92","26.22","30.48","28.24","28.66","28.87","30.13","30.59","29.51","32.19"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: 4.4 in row 2.0 4.4 32.02 30.60 36.29 33.61 34.09 34.39 36.12 36.65 35.07 39.28
debug: cplib: May-01-2022 22:07:31: Converting KG to LB 2.0
debug: cplib: May-01-2022 22:07:31: After all the shift ["2.0",4.4,"32.02","30.60","36.29","33.61","34.09","34.39","36.12","36.65","35.07","39.28"]
debug: cplib: May-01-2022 22:07:31: Max Token prior to cleaning: c in row dk19700 c onsu mer _ p ri c e s p a g e 39 effectiveseptember132021
debug: cplib: May-01-2022 22:07:31: Converting KG to LB dk19700
debug: cplib: May-01-2022 22:07:31: After all the shift ["dk19700",null,"onsu","mer","_","p","ri","c","e","s","p","a","g","e","39","effectiveseptember132021"]
debug: cplib: May-01-2022 22:07:31: Final Table Row returning ["1 2 3 4 5 6 7 8 9 10","0.25 0.55 9.41 9.49 10.02 9.75 9.87 9.88 9.93 10.05 9.99 10.24","0.5 1.1 13.18 12.99 15.14 13.70 14.06 14.06 14.41 14.69 14.49 14.77","1.0 2.2 21.81 21.82 24.63 22.86 23.26 23.35 24.13 24.56 23.91 25.10","1.5 3.3 26.92 26.22 30.48 28.24 28.66 28.87 30.13 30.59 29.51 32.19","2.0 4.4 32.02 30.60 36.29 33.61 34.09 34.39 36.12 36.65 35.07 39.28","dk19700 NaN onsu mer _ p ri c e s p a g e 39 effectiveseptember132021"]
debug: cplib: May-01-2022 22:07:31: Packet converted to table ["1 2 3 4 5 6 7 8 9 10","0.25 0.55 9.41 9.49 10.02 9.75 9.87 9.88 9.93 10.05 9.99 10.24","0.5 1.1 13.18 12.99 15.14 13.70 14.06 14.06 14.41 14.69 14.49 14.77","1.0 2.2 21.81 21.82 24.63 22.86 23.26 23.35 24.13 24.56 23.91 25.10","1.5 3.3 26.92 26.22 30.48 28.24 28.66 28.87 30.13 30.59 29.51 32.19","2.0 4.4 32.02 30.60 36.29 33.61 34.09 34.39 36.12 36.65 35.07 39.28","dk19700 NaN onsu mer _ p ri c e s p a g e 39 effectiveseptember132021"]
debug: cplib: May-01-2022 22:07:31: Starting small business checks...
debug: cplib: May-01-2022 22:07:31: Starting to clean extra lines
debug: cplib: May-01-2022 22:07:31: Tracked Packet USA Post Cleaning ["1 2 3 4 5 6 7","0.5 1.1 17.18 17.18 17.18 17.18 17.18 17.18 17.18","1.1 2.42 18.97 18.97 18.97 18.97 18.97 18.97 18.97","2.2 4.84 21.91 21.91 21.91 21.91 21.91 21.91 21.91","3.3 7.26 24.79 24.79 24.79 24.79 24.79 24.79 24.79","4.4 9.68 27.64 27.64 27.64 27.64 27.64 27.64 27.64"]
debug: cplib: May-01-2022 22:07:31: International small packet AIR after cleaning ["1 2 3 4 5 6 7 8 9 10","0.1 0.22 11.11 10.62 12.94 11.53 11.92 12.07 12.07 12.56 12.52 13.26","0.25 0.55 12.17 11.61 14.16 12.63 13.05 13.22 13.22 13.76 13.69 14.51","0.5 1.1 22.70 21.70 26.46 23.93 24.76 24.73 24.71 25.74 25.59 26.40","1.0 2.2 43.23 41.91 49.63 44.26 45.55 47.24 47.62 48.33 47.45 50.96","1.5 3.3 49.31 52.46 62.37 55.51 59.44 65.19 61.07 61.93 59.49 65.33","2.0 4.4 55.39 63.00 75.11 66.71 69.15 75.93 74.51 75.53 71.49 79.65"]
debug: cplib: May-01-2022 22:07:31: International small packet surface after cleaning ["1 2 3 4 5 6 7 8 9 10","0.25 0.55 9.41 9.49 10.02 9.75 9.87 9.88 9.93 10.05 9.99 10.24","0.5 1.1 13.18 12.99 15.14 13.70 14.06 14.06 14.41 14.69 14.49 14.77","1.0 2.2 21.81 21.82 24.63 22.86 23.26 23.35 24.13 24.56 23.91 25.10","1.5 3.3 26.92 26.22 30.48 28.24 28.66 28.87 30.13 30.59 29.51 32.19","2.0 4.4 32.02 30.60 36.29 33.61 34.09 34.39 36.12 36.65 35.07 39.28"]
debug: cplib: May-01-2022 22:07:31: Starting loading by type 
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'A1', 0.45, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'A2', 0.51, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'A3', 0.45, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'A4', 0.45, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'A5', 0.55, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'A6', 0.54, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'B1', 0.59, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'B2', 0.59, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'B3', 0.59, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'B4', 0.59, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'B5', 0.59, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'C1', 0.55, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'C2', 0.60, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'C3', 0.58, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'C4', 0.60, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'C5', 0.58, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'D1', 0.66, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'D2', 0.66, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'D3', 0.69, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'D4', 0.61, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'D5', 0.69, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'D6', 0.68, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'D7', 0.69, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'E1', 2.92, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'E2', 2.93, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'E3', 2.91, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'E4', 2.92, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'E5', 2.93, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'F1', 3.02, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'F2', 3.07, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'F3', 3.25, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'F4', 3.29, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'F5', 3.35, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'F6', 3.38, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'G1', 3.19, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'G2', 3.15, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'G3', 3.16, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'G4', 3.20, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'H1', 3.69, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'H2', 3.65, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'H3', 3.88, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'H4', 3.20, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'H5', 4.01, 'priority', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'A1', 0.32, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'A2', 0.35, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'A3', 0.33, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'A4', 0.33, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'A5', 0.36, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'A6', 0.38, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'B1', 0.38, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'B2', 0.37, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'B3', 0.38, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'B4', 0.38, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'B5', 0.38, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'C1', 0.39, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'C2', 0.42, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'C3', 0.38, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'C4', 0.40, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'C5', 0.38, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'D1', 0.45, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'D2', 0.45, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'D3', 0.51, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'D4', 0.51, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'D5', 0.54, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'D6', 0.47, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'D7', 0.48, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'E1', 1.23, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'E2', 1.23, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'E3', 1.23, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'E4', 1.23, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'E5', 1.24, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'F1', 1.33, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'F2', 1.33, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'F3', 1.53, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'F4', 1.56, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'F5', 1.62, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'F6', 1.63, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'G1', 2.26, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'G2', 2.25, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'G3', 2.25, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'G4', 2.28, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'H1', 2.53, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'H2', 2.52, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'H3', 2.98, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'H4', 2.26, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'H5', 3.08, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'J1', 4.16, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'J2', 4.45, 'express', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'A1', 0.31, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'A2', 0.34, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'A3', 0.31, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'A4', 0.31, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'A5', 0.31, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'A6', 0.31, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'B1', 0.31, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'B2', 0.31, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'B3', 0.31, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'B4', 0.31, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'B5', 0.31, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'C1', 0.39, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'C2', 0.42, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'C3', 0.29, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'C4', 0.32, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'C5', 0.31, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'D1', 0.44, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'D2', 0.42, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'D3', 0.46, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'D4', 0.45, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'D5', 0.47, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'D6', 0.45, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'D7', 0.47, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'E1', 0.46, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'E2', 0.47, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'E3', 0.46, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'E4', 0.46, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'E5', 0.46, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'F1', 0.49, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'F2', 0.49, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'F3', 0.56, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'F4', 0.56, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'F5', 0.56, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'F6', 0.58, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'G1', 0.64, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'G2', 0.62, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'G3', 0.64, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'G4', 0.65, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'H1', 0.69, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'H2', 0.68, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'H3', 0.83, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'H4', 0.59, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'H5', 0.85, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'J1', 3.85, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', 'J2', 3.87, 'regular', 'Canada', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '1', 4.23, 'express', 'USA', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '2', 4.28, 'express', 'USA', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '3', 4.44, 'express', 'USA', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '4', 4.66, 'express', 'USA', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '5', 4.91, 'express', 'USA', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '6', 4.99, 'express', 'USA', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '7', 5.08, 'express', 'USA', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '1', 1.68, 'expedited', 'USA', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '2', 1.79, 'expedited', 'USA', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '3', 1.85, 'expedited', 'USA', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '4', 1.91, 'expedited', 'USA', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '5', 2.47, 'expedited', 'USA', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '6', 2.56, 'expedited', 'USA', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '7', 2.63, 'expedited', 'USA', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '1', 4.36, 'priority', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '2', 10.49, 'priority', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '3', 10.76, 'priority', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '4', 11.12, 'priority', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '5', 15.84, 'priority', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '6', 14.33, 'priority', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '7', 23.69, 'priority', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '101', 7.22, 'express', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '102', 4.82, 'express', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '103', 9.69, 'express', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '104', 4.81, 'express', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '105', 5.01, 'express', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '106', 6.42, 'express', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '107', 7.88, 'express', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '108', 9.02, 'express', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '109', 5.11, 'express', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '110', 8.86, 'express', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '201', 7.24, 'air', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '202', 7.03, 'air', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '203', 8.04, 'air', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '204', 8.59, 'air', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '205', 7.60, 'air', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '206', 10.69, 'air', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '207', 9.76, 'air', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '208', 11.53, 'air', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '209', 11.01, 'air', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '210', 12.00, 'air', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '401', 3.04, 'surface', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '402', 3.43, 'surface', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '403', 4.01, 'surface', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '404', 3.72, 'surface', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '405', 3.92, 'surface', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '406', 4.17, 'surface', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '407', 3.94, 'surface', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '408', 4.30, 'surface', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '409', 4.04, 'surface', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Insert data OVERLOADinsert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 30.1, 'kg', '410', 4.13, 'surface', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: Error occurred when preparing statement! {"errno":1,"code":"SQLITE_ERROR"} for statement insert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 1, 'kg', '9', undefined, 'tracked_packet', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: SQLITE_ERROR: no such column: undefined
debug: cplib: May-01-2022 22:07:31: Data loading failed {"errno":1,"code":"SQLITE_ERROR","level":"debug"}
debug: cplib: May-01-2022 22:07:31: Error occurred when preparing statement! {"errno":1,"code":"SQLITE_ERROR"} for statement insert into RATES(year, max_weight, weight_type, rate_code, price, type, country, customer_type) VALUES(2022, 1, 'kg', '10', undefined, 'tracked_packet', 'INTERNATIONAL', 'regular')
debug: cplib: May-01-2022 22:07:31: SQLITE_ERROR: no such column: undefined
